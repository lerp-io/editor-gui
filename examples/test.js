// Generated by CoffeeScript 2.5.1
var test;

import {
  createElement,
  useState,
  useEffect,
  useRef,
  useReducer
} from 'react';

import {
  Layout,
  In,
  Box,
  Row,
  Menu,
  Section,
  SectionLabel,
  Style,
  Separator,
  MenuAnchor
} from '../components';

import ExampleRecursiveMenu from './ExampleRecursiveMenu.coffee';

export default test = function() {
  var anchor2_pos, anchor_pos, is_mounted, menu_1_visible, menu_2_visible, setAnchor2Pos, setAnchorPos, setMenu1Visible, setMenu2Visible, setMounted, setSize, size;
  [is_mounted, setMounted] = useState(false);
  [size, setSize] = useState(null);
  useEffect(function() {
    if (!is_mounted) {
      return setMounted(true);
    }
  }, []);
  [menu_1_visible, setMenu1Visible] = useState(true);
  [menu_2_visible, setMenu2Visible] = useState(false);
  [anchor_pos, setAnchorPos] = useState([0, 30]);
  [anchor2_pos, setAnchor2Pos] = useState([150, 400]);
  
  // log anchor_pos
  return h(Layout, {
    // getLabelWidth: (label)->
    // 	label.length * 8.15
    fontSize: 13,
    fontFamily: 'Nunito'
  }, h(MenuAnchor, {
    handlePosition: 'bottom',
    align: 'left-down',
    autoHandlePosition: true,
    autoSnapHandlePosition: true,
    autoAlign: false,
    position: anchor_pos,
    visible: menu_1_visible,
    onBarClick: function() {
      return setMenu1Visible(!menu_1_visible);
    },
    setPosition: function(x, y) {
      return setAnchorPos([x, y]);
    }
  }, h(ExampleRecursiveMenu, {
    name: 'menu',
    vert: false
  })), h(MenuAnchor, {
    handlePosition: 'bottom',
    align: 'left-down',
    autoHandlePosition: true,
    autoSnapHandlePosition: true,
    autoAlign: false,
    dotColor: 'cyan',
    dotCount: 2,
    barColor: 'red',
    position: anchor2_pos,
    visible: menu_2_visible,
    onBarClick: function() {
      return setMenu2Visible(!menu_2_visible);
    },
    setPosition: function(x, y) {
      return setAnchor2Pos([x, y]);
    }
  }, h(ExampleRecursiveMenu, {
    name: 'menu2',
    vert: false
  })));
};
