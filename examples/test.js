// Generated by CoffeeScript 2.5.1
var menuToggleReducer, menuToggleReducerState, test;

import {
  createElement,
  useState,
  useEffect,
  useRef,
  useReducer
} from 'react';

import {
  Layout,
  In,
  Box,
  Row,
  Menu,
  Section,
  SectionLabel,
  Style,
  Separator
} from '../components';

menuToggleReducerState = {};

menuToggleReducer = function(state, {menu_name, item_name}) {
  return Object.assign({}, state, {
    [`${menu_name}`]: item_name
  });
};

export default test = function() {
  var dev, dispatchMenuState, is_mounted, menu_state, renderRecursiveMenu, setMounted, setSize, size;
  [is_mounted, setMounted] = useState(false);
  [size, setSize] = useState(null);
  useEffect(function() {
    if (!is_mounted) {
      return setMounted(true);
    }
  }, []);
  [menu_state, dispatchMenuState] = useReducer(menuToggleReducer, menuToggleReducerState);
  renderRecursiveMenu = function(menu_name, level = 0) {
    return h(Menu, {
      vert: level % 2 === 0,
      select: menu_state[menu_name],
      onSelect: function(item_name) {
        return onSelectRecursiveMenuItem(menu_name, item_name);
      },
      items: {
        [`${menu_name}-5BOX`]: renderBox,
        [`${menu_name}-1`]: renderRecursiveMenu.bind(null, `${menu_name}-1`, level + 1),
        [`${menu_name}-2`]: renderRecursiveMenu.bind(null, `${menu_name}-2`, level + 1),
        [`${menu_name}-3`]: renderRecursiveMenu.bind(null, `${menu_name}-3`, level + 1),
        [`${menu_name}-4`]: renderRecursiveMenu.bind(null, `${menu_name}-4`, level + 1)
      }
    });
  };
  return dev = function() {
    return h(Layout, {
      getLabelWidth: function(label) {
        return label.length * 8.15;
      }
    }, h(MenuAnchor, {
      align: 'right-down'
    }, renderRecursiveMenu('r', 0)));
  };
};
